/* 
 * ProcessMaker API
 *
 * This ProcessMaker I/O API provides access to a BPMN 2.0 compliant workflow engine api that is designed to be used as a microservice to support enterprise cloud applications.  The current Alpha 1.0 version supports most of the descriptive class of the BPMN 2.0 specification.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@processmaker.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ProcessMaker.PMIO.Api;
using ProcessMaker.PMIO.Model;
using ProcessMaker.PMIO.Client;
using System.Reflection;

namespace ProcessMaker.PMIO.Test
{
    /// <summary>
    ///  Class for testing UserAttributes
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class UserAttributesTests
    {
        // TODO uncomment below to declare an instance variable for UserAttributes
        //private UserAttributes instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of UserAttributes
            //instance = new UserAttributes();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UserAttributes
        /// </summary>
        [Test]
        public void UserAttributesInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" UserAttributes
            //Assert.IsInstanceOfType<UserAttributes> (instance, "variable 'instance' is a UserAttributes");
        }

        /// <summary>
        /// Test the property 'Username'
        /// </summary>
        [Test]
        public void UsernameTest()
        {
            // TODO unit test for the property 'Username'
        }
        /// <summary>
        /// Test the property 'Password'
        /// </summary>
        [Test]
        public void PasswordTest()
        {
            // TODO unit test for the property 'Password'
        }
        /// <summary>
        /// Test the property 'Firstname'
        /// </summary>
        [Test]
        public void FirstnameTest()
        {
            // TODO unit test for the property 'Firstname'
        }
        /// <summary>
        /// Test the property 'Lastname'
        /// </summary>
        [Test]
        public void LastnameTest()
        {
            // TODO unit test for the property 'Lastname'
        }
        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Test]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }
        /// <summary>
        /// Test the property 'ExpiresAt'
        /// </summary>
        [Test]
        public void ExpiresAtTest()
        {
            // TODO unit test for the property 'ExpiresAt'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Test]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'Country'
        /// </summary>
        [Test]
        public void CountryTest()
        {
            // TODO unit test for the property 'Country'
        }
        /// <summary>
        /// Test the property 'City'
        /// </summary>
        [Test]
        public void CityTest()
        {
            // TODO unit test for the property 'City'
        }
        /// <summary>
        /// Test the property 'Location'
        /// </summary>
        [Test]
        public void LocationTest()
        {
            // TODO unit test for the property 'Location'
        }
        /// <summary>
        /// Test the property 'Address'
        /// </summary>
        [Test]
        public void AddressTest()
        {
            // TODO unit test for the property 'Address'
        }
        /// <summary>
        /// Test the property 'Phone'
        /// </summary>
        [Test]
        public void PhoneTest()
        {
            // TODO unit test for the property 'Phone'
        }
        /// <summary>
        /// Test the property 'Fax'
        /// </summary>
        [Test]
        public void FaxTest()
        {
            // TODO unit test for the property 'Fax'
        }
        /// <summary>
        /// Test the property 'Cellular'
        /// </summary>
        [Test]
        public void CellularTest()
        {
            // TODO unit test for the property 'Cellular'
        }
        /// <summary>
        /// Test the property 'ZipCode'
        /// </summary>
        [Test]
        public void ZipCodeTest()
        {
            // TODO unit test for the property 'ZipCode'
        }
        /// <summary>
        /// Test the property 'Position'
        /// </summary>
        [Test]
        public void PositionTest()
        {
            // TODO unit test for the property 'Position'
        }
        /// <summary>
        /// Test the property 'Resume'
        /// </summary>
        [Test]
        public void ResumeTest()
        {
            // TODO unit test for the property 'Resume'
        }
        /// <summary>
        /// Test the property 'BirthdayAt'
        /// </summary>
        [Test]
        public void BirthdayAtTest()
        {
            // TODO unit test for the property 'BirthdayAt'
        }
        /// <summary>
        /// Test the property 'BookmarkStartCases'
        /// </summary>
        [Test]
        public void BookmarkStartCasesTest()
        {
            // TODO unit test for the property 'BookmarkStartCases'
        }
        /// <summary>
        /// Test the property 'TimeZone'
        /// </summary>
        [Test]
        public void TimeZoneTest()
        {
            // TODO unit test for the property 'TimeZone'
        }
        /// <summary>
        /// Test the property 'DefaultLang'
        /// </summary>
        [Test]
        public void DefaultLangTest()
        {
            // TODO unit test for the property 'DefaultLang'
        }
        /// <summary>
        /// Test the property 'CreatedAt'
        /// </summary>
        [Test]
        public void CreatedAtTest()
        {
            // TODO unit test for the property 'CreatedAt'
        }
        /// <summary>
        /// Test the property 'UpdatedAt'
        /// </summary>
        [Test]
        public void UpdatedAtTest()
        {
            // TODO unit test for the property 'UpdatedAt'
        }
        /// <summary>
        /// Test the property 'Clients'
        /// </summary>
        [Test]
        public void ClientsTest()
        {
            // TODO unit test for the property 'Clients'
        }

    }

}
